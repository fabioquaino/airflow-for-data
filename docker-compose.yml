version: '3'
x-airflow-common: &airflow-common
  build: .
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG: 1

  volumes:
    - ./dags:${AIRFLOW_HOME}/dags
    - ./logs:${AIRFLOW_HOME}/logs
    - ./plugins:${AIRFLOW_HOME}/plugins
    - ./resources:${AIRFLOW_HOME}/resources
    - ../data:/opt/airflow/data
  user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
  depends_on:
    - redis
    - postgres

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:latest
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - ${AIRFLOW_WEBSERVER_PORT}:${AIRFLOW_WEBSERVER_PORT}
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    restart: always

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD}
  
  airflow-init-libraries:
    <<: *airflow-common
    command: pip install pandas matplotlib seaborn numpy scikit-learn SQLAlchemy
    depends_on:
      - postgres
      - redis
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'false'
      _AIRFLOW_WWW_USER_CREATE: 'false'


volumes:
  postgres-db-volume:
